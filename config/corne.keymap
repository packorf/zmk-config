/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
            bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y   &kp U   &kp I     &kp O   &kp P    &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H   &kp J   &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N   &kp M   &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
        };

        lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC|  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP|
// | SHFT|     | PGU |  UP | PGD |     |   |     | PGU |  UP | PGD |     |     |
// | CTRL| HOME| LFT | DWN | RGT | END |   | HOME| LFT | DWN | RGT | END |     |
//                   | GUI |     | SPC |   | ENT | ADJ | ALT |
            bindings = <
   &kp ESC    &kp N1   &kp N2    &kp N3   &kp N4    &kp N5        &kp N6    &kp N7    &kp N8   &kp N9    &kp N0  &trans
   &kp LSHFT  &none    &kp PG_UP &kp UP   &kp PG_DN &none         &none     &kp PG_UP &kp UP   &kp PG_DN &none   &none
   &kp LCTRL  &kp HOME &kp LEFT  &kp DOWN &kp RIGHT &kp END       &kp HOME  &kp LEFT  &kp DOWN &kp RIGHT &kp END &none
                                 &kp LGUI &trans &kp SPACE        &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// | SHFT |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | CTRL |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
            bindings = <
   &kp ESC   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp DEL
   &kp LSHFT &none    &none  &none    &none    &none        &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LCTRL &none    &none  &none    &none    &none        &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE    &kp RET   &trans    &kp RALT
            >;
        };

        adjust_layer {
// -----------------------------------------------------------------------------------------
// | F12 | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 | F11 |
// |     |     |VOLDN| MUTE|VOLUP|     |   |     | PREV| PLAY| NEXT|     |     |
// |BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   |     |     |     |     | EOFF| E ON|
//                    | GUI |    | SPC |   | ENT |     | ALT |
            bindings = <
   &kp F12    &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6  &kp F7     &kp F8   &kp F9     &kp F10           &kp F11
   &none      &none        &kp C_VOL_DN &kp C_MUTE   &kp C_VOL_UP &none          &none   &kp C_PREV &kp C_PP &kp C_NEXT &out OUT_USB      &out OUT_BLE
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &none   &none      &none    &none      &ext_power EP_OFF &ext_power EP_ON
                    	                 &kp LGUI   &trans        &kp SPACE      &kp RET &trans     &kp RALT
            >;
        };
    };
};
